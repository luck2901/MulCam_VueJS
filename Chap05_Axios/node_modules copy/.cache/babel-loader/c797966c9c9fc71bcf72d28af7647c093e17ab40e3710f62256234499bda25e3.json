{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"A06 TodoList\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_A06TodoListForm = _resolveComponent(\"A06TodoListForm\");\n  const _component_A06TodoListTable = _resolveComponent(\"A06TodoListTable\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_A06TodoListForm, {\n    addTodo: $options.addTodo\n  }, null, 8 /* PROPS */, [\"addTodo\"]), _createVNode(_component_A06TodoListTable, {\n    todoList: $data.todoList,\n    updateTodo: $options.updateTodo,\n    deleteTodo: $options.deleteTodo\n  }, null, 8 /* PROPS */, [\"todoList\", \"updateTodo\", \"deleteTodo\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createVNode","_component_A06TodoListForm","addTodo","$options","_component_A06TodoListTable","todoList","$data","updateTodo","deleteTodo"],"sources":["C:\\Works\\Chap03_Data\\src\\components\\A06TodoList.vue"],"sourcesContent":["\n\n\n<template>\n  <h3>A06 TodoList</h3>\n\n  <A06TodoListForm :addTodo=\"addTodo\"></A06TodoListForm>\n  <A06TodoListTable \n    :todoList=\"todoList\" \n    :updateTodo=\"updateTodo\"\n    :deleteTodo=\"deleteTodo\"></A06TodoListTable>\n</template>\n\n<script>\nimport A06TodoListForm from './childcomps/A06TodoListForm.vue'\nimport A06TodoListTable from './childcomps/A06TodoListTable.vue'\n\nconst todoList = [\n  { id: 1, text: '첫 번째 할 일', done: true },\n  { id: 2, text: '두 번째 할 일', done: false },\n  { id: 3, text: '세 번째 할 일', done: false },\n];\n\nexport default {\n  components: { A06TodoListForm, A06TodoListTable },\n  data() {\n    return {\n      todoList,\n      id: 4,\n    }\n  },\n  methods: {\n    updateTodo(id) {\n      // this.todoList[id].done = !this.todoList[id].done;\n      const todo = this.todoList.find( (todo) => (todo.id === id) ? true : false)\n      todo.done = !todo.done;\n    },\n    deleteTodo(id) {\n      const idx = this.todoList.findIndex( (todo) => (todo.id === id) ? true : false)\n      this.todoList.splice(idx, 1);\n    },\n    addTodo(text) {\n      const todo = {id: this.id++, text, done: false};\n      this.todoList.push(todo);\n    },\n  }\n}\n</script>\n\n\n"],"mappings":";gCAIEA,mBAAA,CAAqB,YAAjB,cAAY;;;;;6DAAhBC,UAAqB,EAErBC,YAAA,CAAsDC,0BAAA;IAApCC,OAAO,EAAEC,QAAA,CAAAD;EAAO,sCAClCF,YAAA,CAG8CI,2BAAA;IAF3CC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAClBE,UAAU,EAAEJ,QAAA,CAAAI,UAAU;IACtBC,UAAU,EAAEL,QAAA,CAAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}